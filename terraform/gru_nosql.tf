#
# gru_nosql.tf
#

#-------------------
# NoSQL Table
#-------------------
module "gru_nosql-table_fotogal_images" {
    source = "./modules/nosql/table"
   
    providers = {
       oci = oci.gru
    }

    compartment_id = var.compartment_id

    nosql_table = {
        name = "fotogal_ntable_images"
        read_units = "1"
        write_units = "1"
        storage_gbs = "1"
        ddl_statement = <<EOS
           CREATE TABLE IF NOT EXISTS fotogal_ntable_images (
               id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
               image_url STRING,
               image_filename STRING,
               image_original_filename STRING,
               image_host_fqdn STRING,
               image_uri STRING,
               image_type ENUM (png, jpeg, gif),
               user_id INTEGER,
               created_ts INTEGER,
               liked_list ARRAY(INTEGER),
               disliked_list ARRAY(INTEGER),
               main_comment STRING,
               is_profile BOOLEAN,
           PRIMARY KEY(id))
        EOS
    }
}

module "gru_nosql-table_fotogal_users" {
    source = "./modules/nosql/table"
   
    providers = {
       oci = oci.gru
    }

    compartment_id = var.compartment_id

    nosql_table = {
        name = "fotogal_ntable_users"
        read_units = "1"
        write_units = "1"
        storage_gbs = "1"
        ddl_statement = <<EOS
           CREATE TABLE IF NOT EXISTS fotogal_ntable_users (
               id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
               email STRING,
               full_name STRING,
               username STRING,
               password STRING,
               follow_list ARRAY(INTEGER),
               follow_sent_list ARRAY(INTEGER),
               follow_you_list ARRAY(INTEGER),
               follow_received_list ARRAY(INTEGER),
               created_ts INTEGER,
               is_private BOOLEAN,
               is_professional_account BOOLEAN,
               profile_image_url STRING,
               user_data JSON,
           PRIMARY KEY(id, email, username))
        EOS
    }
}

module "gru_nosql-table_fotogal_authsession" {
    source = "./modules/nosql/table"
   
    providers = {
       oci = oci.gru
    }

    compartment_id = var.compartment_id

    nosql_table = {
        name = "fotogal_ntable_authsession"
        read_units = "1"
        write_units = "1"
        storage_gbs = "1"
        ddl_statement = <<EOS
           CREATE TABLE IF NOT EXISTS fotogal_ntable_authsession (
               random_token STRING,
               created_ts INTEGER,
               expire_ts INTEGER,
               user_id INTEGER,
           PRIMARY KEY(random_token))
        EOS
    }
}

#-------------------
# NoSQL Index
#-------------------
module "gru_nosql-index_fotogal_images_userid" {
    source = "./modules/nosql/index"
   
    providers = {
       oci = oci.gru
    }

    compartment_id = var.compartment_id
    column_name = "user_id"
    index_name = "user_id_idx"
    table_name_or_id = module.gru_nosql-table_fotogal_images.id
}

module "gru_nosql-index_fotogal_images_createdts" {
    source = "./modules/nosql/index"
   
    providers = {
       oci = oci.gru
    }

    compartment_id = var.compartment_id
    column_name = "created_ts"
    index_name = "created_ts_idx"
    table_name_or_id = module.gru_nosql-table_fotogal_images.id
}

module "gru_nosql-index_fotogal_authsession_userid" {
    source = "./modules/nosql/index"
   
    providers = {
       oci = oci.gru
    }

    compartment_id = var.compartment_id
    column_name = "user_id"
    index_name = "user_id_idx"
    table_name_or_id = module.gru_nosql-table_fotogal_authsession.id
}